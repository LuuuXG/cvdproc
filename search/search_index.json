{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"CVDProc: CerebroVascular Disease imaging Processing","text":"<p>Warning</p> <p>This package is intended for research purposes only, to facilitate reproducibility of neuroimaging analyses in our center. The authors do NOT guarantee the correctness or clinical validity of all processing workflows.</p> <p>This repository currently serves as a public display for MRI image preprocessing and analysis, aimed at enhancing the transparency and reproducibility of research conducted at our center.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#download","title":"Download","text":"<p>You can download the source code by cloning the GitHub repository: <pre><code>git clone https://github.com/LuuuXG/cvdproc.git\n</code></pre> Or download it manually from the GitHub homepage.</p>"},{"location":"installation/#installation_1","title":"Installation","text":"<p>Please create a new conda environment, which is more suitable for this package.</p> <pre><code># Please replace &lt;env_name&gt; with the name you want for the environment\nconda create -n &lt;env_name&gt; python=3.7 openssl=1.1.1\nconda activate &lt;env_name&gt;\n</code></pre> <p>Python Version</p> <p>Due to the features of the early version of  SHIVA model, python 3.7 is used for tensorflow compatibility. We are working on updating the code to support higher versions of Python by using SHiVAi. For example, LST-AI for WMH segmentation needs python 3.8 or higher. Currently, the solution is to use a different environment for different pipelines if necessary.</p> <p>Then, navigate to the directory where you downloaded the code (the folder containing <code>setup.py</code>), and run the following command:</p> <pre><code># Use -e to allow modification of the code without needing to reinstall.\n# Here &lt;/path/to/cvdproc&gt; is the folder containing `setup.py`\npip install -e /path/to/cvdproc\n\n# If it is necessary to use mirror\npip install -e /path/to/cvdproc -i https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre> <p>tensorflow and torch</p> <p>Because these two packages are large, we do not specify them in <code>setup.py</code>. However, they will be used in the subsequent code. Please install them as needed.</p>"},{"location":"usage/","title":"Usage","text":"<p>Please refer to the different pages for specific functions:</p> <ul> <li>dcm2bids: Create BIDS dataset from DICOM files.</li> </ul> <p>Or if you already have a dataset in BIDS format, you can use the following functions:</p> <ul> <li>Pipelines: Different pipelines for MRI preprocessing and analysis.</li> </ul>"},{"location":"dcm2bids/dcm2bids/","title":"dcm2bids","text":"<p>We are using the dcm2bids to convert DICOM files to BIDS format. Before running the code, please make sure you have installed the <code>dcm2bids</code> (it should have been installed when you installed the cvdproc) and <code>dcm2niix</code> (you can install it via <code>apt install dcm2niix</code>)</p>"},{"location":"dcm2bids/dcm2bids/#create-a-new-bids-dataset","title":"Create a new BIDS dataset","text":"<p>If you want to create a new BIDS dataset, you can use the following command:</p> <pre><code>cvdproc --run_initialization &lt;path/to/the/folder/you/want/to/create&gt;\n</code></pre> <p>You don't need to create the folder manually, the code will create it for you.</p>"},{"location":"dcm2bids/dcm2bids/#convert-dicom-to-bids","title":"Convert DICOM to BIDS","text":"<p>If you already have a BIDS root folder or just created one with the command above, you can follow the steps below to convert DICOM files to BIDS format.</p>"},{"location":"dcm2bids/dcm2bids/#create-a-dcm2bids-configuration-file","title":"Create a dcm2bids configuration file","text":"<p>Please refer to the official dcm2bids documentation How to create a configuration file for the most detailed guidance.</p> <p>Here we take the example of converting a 3D T1w image to BIDS format.</p> <p>Create a file named <code>dcm2bids_config.json</code> in the <code>code</code> folder of your BIDS root directory (the file name and location can be changed, but we name it this way for convenience). The content of the file is as follows:</p> <pre><code>{\n\"descriptions\": [\n{\n\"datatype\": \"anat\",\n\"suffix\": \"T1w\",\n\"criteria\": {\n\"SeriesDescription\": \"*mprage*\",\n}\n}\n]\n}\n</code></pre> <p>The most important part of the configuration file is the <code>criteria</code> field, which specifies how to match the DICOM files. In this case, we are matching the <code>SeriesDescription</code> field with a regular expression <code>*mprage*</code>. If your DICOM files do not have this field or have a different value, you can try to use the <code>dcm2bids_helper</code> command to get the information, or you can use <code>dcm2niix</code> (which can also be found in MRIcroGL) to get the information in the JSON file. You can also skip this step (just copy the content above) and wait for the next step to see how we solve it.</p>"},{"location":"dcm2bids/dcm2bids/#create-a-cvdproc-configuration-file","title":"Create a cvdproc configuration file","text":"<p>cvdproc config file</p> <p>This step is very important because it is the core of the <code>cvdproc</code> command to specify parameters.</p>"},{"location":"pipelines/","title":"Pipelines Overview","text":""},{"location":"pipelines/#structural-mri-smri-pipelines","title":"Structural MRI (sMRI) Pipelines","text":"<ul> <li> Freesurfer Recon-all (freesurfer)</li> <li> FSL anat (fsl_anat)</li> <li> WMH Quantification (wmh_quantification)</li> <li> PVS Quantification (pvs_quantification)</li> <li> CMB Quantification (cmb_quantification)</li> </ul>"},{"location":"pipelines/#quantitative-mri-qmri-pipelines","title":"Quantitative MRI (qMRI) Pipelines","text":"<ul> <li> Quantitative Susceptibility Mapping (sepia_qsm)</li> </ul>"},{"location":"pipelines/wmh_quantification/","title":"WMH Quantification","text":"<p>pipeline name: <code>wmh_quantification</code></p>"}]}